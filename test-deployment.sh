#!/bin/bash

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üß™ Test de D√©ploiement SmartPlanning${NC}"
echo "======================================="

# Variables (√† modifier selon votre d√©ploiement)
BACKEND_URL="https://smartplanning-backend.onrender.com"  # Remplacez par votre URL Render
FRONTEND_URL="https://smartplanning.fr"

echo -e "\n${YELLOW}üîç Test Backend${NC}"
echo "URL: $BACKEND_URL"

# Test health check
echo -e "\n1. Health Check..."
if curl -s "$BACKEND_URL/api/health" | grep -q "OK"; then
    echo -e "${GREEN}‚úÖ Backend health check OK${NC}"
else
    echo -e "${RED}‚ùå Backend health check FAILED${NC}"
    echo "V√©rifiez les logs Render et les variables d'environnement"
fi

# Test route principale
echo -e "\n2. Route principale..."
if curl -s "$BACKEND_URL/" | grep -q "SmartPlanning API"; then
    echo -e "${GREEN}‚úÖ Route principale OK${NC}"
else
    echo -e "${RED}‚ùå Route principale FAILED${NC}"
fi

echo -e "\n${YELLOW}üåê Test Frontend${NC}"
echo "URL: $FRONTEND_URL"

# Test frontend
echo -e "\n3. Frontend accessible..."
if curl -s -o /dev/null -w "%{http_code}" "$FRONTEND_URL" | grep -q "200"; then
    echo -e "${GREEN}‚úÖ Frontend accessible${NC}"
else
    echo -e "${RED}‚ùå Frontend non accessible${NC}"
    echo "V√©rifiez que les fichiers sont upload√©s sur Hostinger"
fi

echo -e "\n${YELLOW}üìä R√©sum√© des Tests${NC}"
echo "===================="
echo "Backend: $BACKEND_URL"
echo "Frontend: $FRONTEND_URL"
echo ""
echo -e "${BLUE}üìã Prochaines v√©rifications manuelles :${NC}"
echo "1. Ouvrir $FRONTEND_URL dans le navigateur"
echo "2. Tester l'inscription/connexion"
echo "3. V√©rifier les appels API dans DevTools"
echo "4. Tester les fonctionnalit√©s principales"

echo -e "\n${GREEN}üöÄ D√©ploiement en cours - Surveillez les logs Render !${NC}" 